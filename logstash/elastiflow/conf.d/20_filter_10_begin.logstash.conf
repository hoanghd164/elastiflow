filter {
  # Initialize @metadata values used to control processing flow.
  mutate {
    rename => {
      "[host]" => "[@metadata][host]"
      "[type]" => "[event][dataset]"
    }
  }
  mutate {
    add_field => {
      "[@metadata][resolve_ip2host]" => "${ELASTIFLOW_RESOLVE_IP2HOST:false}"
      "[@metadata][geoip_lookup]" => "${ELASTIFLOW_GEOIP_LOOKUP:true}"
      "[@metadata][asn_lookup]" => "${ELASTIFLOW_ASN_LOOKUP:true}"
      "[@metadata][oui_lookup]" => "${ELASTIFLOW_OUI_LOOKUP:false}"
      "[@metadata][populate_logs]" => "${ELASTIFLOW_POPULATE_LOGS:true}"
      "[@metadata][keep_orig_data]" => "${ELASTIFLOW_KEEP_ORIG_DATA:true}"
      "[ecs][version]" => "1.5.0"
      "[host][ip]" => "%{[@metadata][host]}"
      "[host][name]" => "%{[@metadata][host]}"
      "[agent][name]" => "elastiflow"
      "[agent][type]" => "logstash"
      "[agent][version]" => "4.0.1"
      "[agent][id]" => "${ELASTIFLOW_AGENT_ID:elastiflow}"
      "[event][module]" => "flow"
      "[event][kind]" => "event"
    }
    replace => { "@version" => "4.0.1" }
  }

  # Add agent.hostname - the host running the Logstash instance.
  ruby {
    init => "
      require 'socket'
      @@hostname = Socket.gethostname
    "
    code => "event.set('[agent][hostname]', @@hostname)"
  }
  
  # Adjust data for Netflow and IPFIX being received on the same port.
  if [netflow][version] == 10 {
    mutate {
      rename => { "netflow" => "ipfix" }
      replace => { "[event][dataset]" => "ipfix" }
    }
  } else if [ipfix][version] == 9 {
    mutate {
      rename => { "ipfix" => "netflow" }
      replace => { "[event][dataset]" => "netflow" }
    }
  }

  # Resolve node IP address to hostname.
  if [@metadata][resolve_ip2host] == "true" or [@metadata][resolve_ip2host] == "exporters" {
    dns {
      reverse => [ "[host][name]" ]
      action => "replace"
      nameserver => "${ELASTIFLOW_NAMESERVER:127.0.0.1}"
      hit_cache_size => "${ELASTIFLOW_DNS_HIT_CACHE_SIZE:25000}"
      hit_cache_ttl => "${ELASTIFLOW_DNS_HIT_CACHE_TTL:900}"
      failed_cache_size => "${ELASTIFLOW_DNS_FAILED_CACHE_SIZE:75000}"
      failed_cache_ttl => "${ELASTIFLOW_DNS_FAILED_CACHE_TTL:3600}"
    }
  }
}